// Code generated by go-queryset. DO NOT EDIT.
package models

import (
	"errors"
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set ClusterQuerySet

// ClusterQuerySet is an queryset type for Cluster
type ClusterQuerySet struct {
	db *gorm.DB
}

// NewClusterQuerySet constructs new ClusterQuerySet
func NewClusterQuerySet(db *gorm.DB) ClusterQuerySet {
	return ClusterQuerySet{
		db: db.Model(&Cluster{}),
	}
}

func (qs ClusterQuerySet) w(db *gorm.DB) ClusterQuerySet {
	return NewClusterQuerySet(db)
}

// Create is an autogenerated method
// nolint: dupl
func (o *Cluster) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Cluster) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) All(ret *[]Cluster) error {
	return qs.db.Find(ret).Error
}

// AreaIDEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) AreaIDEq(areaID int) ClusterQuerySet {
	return qs.w(qs.db.Where("area_id = ?", areaID))
}

// AreaIDGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) AreaIDGt(areaID int) ClusterQuerySet {
	return qs.w(qs.db.Where("area_id > ?", areaID))
}

// AreaIDGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) AreaIDGte(areaID int) ClusterQuerySet {
	return qs.w(qs.db.Where("area_id >= ?", areaID))
}

// AreaIDIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) AreaIDIn(areaID ...int) ClusterQuerySet {
	if len(areaID) == 0 {
		qs.db.AddError(errors.New("must at least pass one areaID in AreaIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("area_id IN (?)", areaID))
}

// AreaIDLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) AreaIDLt(areaID int) ClusterQuerySet {
	return qs.w(qs.db.Where("area_id < ?", areaID))
}

// AreaIDLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) AreaIDLte(areaID int) ClusterQuerySet {
	return qs.w(qs.db.Where("area_id <= ?", areaID))
}

// AreaIDNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) AreaIDNe(areaID int) ClusterQuerySet {
	return qs.w(qs.db.Where("area_id != ?", areaID))
}

// AreaIDNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) AreaIDNotIn(areaID ...int) ClusterQuerySet {
	if len(areaID) == 0 {
		qs.db.AddError(errors.New("must at least pass one areaID in AreaIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("area_id NOT IN (?)", areaID))
}

// ArtifactoryEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ArtifactoryEq(artifactory string) ClusterQuerySet {
	return qs.w(qs.db.Where("artifactory = ?", artifactory))
}

// ArtifactoryIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ArtifactoryIn(artifactory ...string) ClusterQuerySet {
	if len(artifactory) == 0 {
		qs.db.AddError(errors.New("must at least pass one artifactory in ArtifactoryIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("artifactory IN (?)", artifactory))
}

// ArtifactoryNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ArtifactoryNe(artifactory string) ClusterQuerySet {
	return qs.w(qs.db.Where("artifactory != ?", artifactory))
}

// ArtifactoryNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ArtifactoryNotIn(artifactory ...string) ClusterQuerySet {
	if len(artifactory) == 0 {
		qs.db.AddError(errors.New("must at least pass one artifactory in ArtifactoryNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("artifactory NOT IN (?)", artifactory))
}

// CapacityUpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CapacityUpdatedAtEq(capacityUpdatedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at = ?", capacityUpdatedAt))
}

// CapacityUpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CapacityUpdatedAtGt(capacityUpdatedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at > ?", capacityUpdatedAt))
}

// CapacityUpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CapacityUpdatedAtGte(capacityUpdatedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at >= ?", capacityUpdatedAt))
}

// CapacityUpdatedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CapacityUpdatedAtIsNotNull() ClusterQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at IS NOT NULL"))
}

// CapacityUpdatedAtIsNull is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CapacityUpdatedAtIsNull() ClusterQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at IS NULL"))
}

// CapacityUpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CapacityUpdatedAtLt(capacityUpdatedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at < ?", capacityUpdatedAt))
}

// CapacityUpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CapacityUpdatedAtLte(capacityUpdatedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at <= ?", capacityUpdatedAt))
}

// CapacityUpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CapacityUpdatedAtNe(capacityUpdatedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at != ?", capacityUpdatedAt))
}

// ClusterIDEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ClusterIDEq(clusterID string) ClusterQuerySet {
	return qs.w(qs.db.Where("cluster_id = ?", clusterID))
}

// ClusterIDIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ClusterIDIn(clusterID ...string) ClusterQuerySet {
	if len(clusterID) == 0 {
		qs.db.AddError(errors.New("must at least pass one clusterID in ClusterIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("cluster_id IN (?)", clusterID))
}

// ClusterIDNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ClusterIDNe(clusterID string) ClusterQuerySet {
	return qs.w(qs.db.Where("cluster_id != ?", clusterID))
}

// ClusterIDNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ClusterIDNotIn(clusterID ...string) ClusterQuerySet {
	if len(clusterID) == 0 {
		qs.db.AddError(errors.New("must at least pass one clusterID in ClusterIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("cluster_id NOT IN (?)", clusterID))
}

// ClusterNumEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ClusterNumEq(clusterNum int64) ClusterQuerySet {
	return qs.w(qs.db.Where("cluster_num = ?", clusterNum))
}

// ClusterNumGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ClusterNumGt(clusterNum int64) ClusterQuerySet {
	return qs.w(qs.db.Where("cluster_num > ?", clusterNum))
}

// ClusterNumGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ClusterNumGte(clusterNum int64) ClusterQuerySet {
	return qs.w(qs.db.Where("cluster_num >= ?", clusterNum))
}

// ClusterNumIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ClusterNumIn(clusterNum ...int64) ClusterQuerySet {
	if len(clusterNum) == 0 {
		qs.db.AddError(errors.New("must at least pass one clusterNum in ClusterNumIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("cluster_num IN (?)", clusterNum))
}

// ClusterNumLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ClusterNumLt(clusterNum int64) ClusterQuerySet {
	return qs.w(qs.db.Where("cluster_num < ?", clusterNum))
}

// ClusterNumLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ClusterNumLte(clusterNum int64) ClusterQuerySet {
	return qs.w(qs.db.Where("cluster_num <= ?", clusterNum))
}

// ClusterNumNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ClusterNumNe(clusterNum int64) ClusterQuerySet {
	return qs.w(qs.db.Where("cluster_num != ?", clusterNum))
}

// ClusterNumNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ClusterNumNotIn(clusterNum ...int64) ClusterQuerySet {
	if len(clusterNum) == 0 {
		qs.db.AddError(errors.New("must at least pass one clusterNum in ClusterNumNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("cluster_num NOT IN (?)", clusterNum))
}

// ConfigSvrCountEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ConfigSvrCountEq(configSvrCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("config_svr_count = ?", configSvrCount))
}

// ConfigSvrCountGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ConfigSvrCountGt(configSvrCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("config_svr_count > ?", configSvrCount))
}

// ConfigSvrCountGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ConfigSvrCountGte(configSvrCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("config_svr_count >= ?", configSvrCount))
}

// ConfigSvrCountIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ConfigSvrCountIn(configSvrCount ...int) ClusterQuerySet {
	if len(configSvrCount) == 0 {
		qs.db.AddError(errors.New("must at least pass one configSvrCount in ConfigSvrCountIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("config_svr_count IN (?)", configSvrCount))
}

// ConfigSvrCountLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ConfigSvrCountLt(configSvrCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("config_svr_count < ?", configSvrCount))
}

// ConfigSvrCountLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ConfigSvrCountLte(configSvrCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("config_svr_count <= ?", configSvrCount))
}

// ConfigSvrCountNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ConfigSvrCountNe(configSvrCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("config_svr_count != ?", configSvrCount))
}

// ConfigSvrCountNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ConfigSvrCountNotIn(configSvrCount ...int) ClusterQuerySet {
	if len(configSvrCount) == 0 {
		qs.db.AddError(errors.New("must at least pass one configSvrCount in ConfigSvrCountNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("config_svr_count NOT IN (?)", configSvrCount))
}

// Count is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CreatedAtEq(createdAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CreatedAtGt(createdAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CreatedAtGte(createdAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CreatedAtLt(createdAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CreatedAtLte(createdAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CreatedAtNe(createdAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// CreatorEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CreatorEq(creator string) ClusterQuerySet {
	return qs.w(qs.db.Where("creator = ?", creator))
}

// CreatorIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CreatorIn(creator ...string) ClusterQuerySet {
	if len(creator) == 0 {
		qs.db.AddError(errors.New("must at least pass one creator in CreatorIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("creator IN (?)", creator))
}

// CreatorNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CreatorNe(creator string) ClusterQuerySet {
	return qs.w(qs.db.Where("creator != ?", creator))
}

// CreatorNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) CreatorNotIn(creator ...string) ClusterQuerySet {
	if len(creator) == 0 {
		qs.db.AddError(errors.New("must at least pass one creator in CreatorNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("creator NOT IN (?)", creator))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) Delete() error {
	return qs.db.Delete(Cluster{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(Cluster{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(Cluster{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DeletedAtEq(deletedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DeletedAtGt(deletedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DeletedAtGte(deletedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DeletedAtIsNotNull() ClusterQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DeletedAtIsNull() ClusterQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DeletedAtLt(deletedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DeletedAtLte(deletedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DeletedAtNe(deletedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// DescriptionEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DescriptionEq(description string) ClusterQuerySet {
	return qs.w(qs.db.Where("description = ?", description))
}

// DescriptionIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DescriptionIn(description ...string) ClusterQuerySet {
	if len(description) == 0 {
		qs.db.AddError(errors.New("must at least pass one description in DescriptionIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("description IN (?)", description))
}

// DescriptionNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DescriptionNe(description string) ClusterQuerySet {
	return qs.w(qs.db.Where("description != ?", description))
}

// DescriptionNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DescriptionNotIn(description ...string) ClusterQuerySet {
	if len(description) == 0 {
		qs.db.AddError(errors.New("must at least pass one description in DescriptionNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("description NOT IN (?)", description))
}

// DisabledEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DisabledEq(disabled bool) ClusterQuerySet {
	return qs.w(qs.db.Where("disabled = ?", disabled))
}

// DisabledIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DisabledIn(disabled ...bool) ClusterQuerySet {
	if len(disabled) == 0 {
		qs.db.AddError(errors.New("must at least pass one disabled in DisabledIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("disabled IN (?)", disabled))
}

// DisabledNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DisabledNe(disabled bool) ClusterQuerySet {
	return qs.w(qs.db.Where("disabled != ?", disabled))
}

// DisabledNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) DisabledNotIn(disabled ...bool) ClusterQuerySet {
	if len(disabled) == 0 {
		qs.db.AddError(errors.New("must at least pass one disabled in DisabledNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("disabled NOT IN (?)", disabled))
}

// EnvironmentEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) EnvironmentEq(environment string) ClusterQuerySet {
	return qs.w(qs.db.Where("environment = ?", environment))
}

// EnvironmentIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) EnvironmentIn(environment ...string) ClusterQuerySet {
	if len(environment) == 0 {
		qs.db.AddError(errors.New("must at least pass one environment in EnvironmentIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("environment IN (?)", environment))
}

// EnvironmentNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) EnvironmentNe(environment string) ClusterQuerySet {
	return qs.w(qs.db.Where("environment != ?", environment))
}

// EnvironmentNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) EnvironmentNotIn(environment ...string) ClusterQuerySet {
	if len(environment) == 0 {
		qs.db.AddError(errors.New("must at least pass one environment in EnvironmentNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("environment NOT IN (?)", environment))
}

// ExtraEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ExtraEq(extra string) ClusterQuerySet {
	return qs.w(qs.db.Where("extra = ?", extra))
}

// ExtraIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ExtraIn(extra ...string) ClusterQuerySet {
	if len(extra) == 0 {
		qs.db.AddError(errors.New("must at least pass one extra in ExtraIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("extra IN (?)", extra))
}

// ExtraNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ExtraNe(extra string) ClusterQuerySet {
	return qs.w(qs.db.Where("extra != ?", extra))
}

// ExtraNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ExtraNotIn(extra ...string) ClusterQuerySet {
	if len(extra) == 0 {
		qs.db.AddError(errors.New("must at least pass one extra in ExtraNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("extra NOT IN (?)", extra))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) GetUpdater() ClusterUpdater {
	return NewClusterUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IDEq(ID uint) ClusterQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IDGt(ID uint) ClusterQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IDGte(ID uint) ClusterQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IDIn(ID ...uint) ClusterQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IDLt(ID uint) ClusterQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IDLte(ID uint) ClusterQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IDNe(ID uint) ClusterQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IDNotIn(ID ...uint) ClusterQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// IPResourceTotalEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceTotalEq(iPResourceTotal int) ClusterQuerySet {
	return qs.w(qs.db.Where("ip_resource_total = ?", iPResourceTotal))
}

// IPResourceTotalGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceTotalGt(iPResourceTotal int) ClusterQuerySet {
	return qs.w(qs.db.Where("ip_resource_total > ?", iPResourceTotal))
}

// IPResourceTotalGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceTotalGte(iPResourceTotal int) ClusterQuerySet {
	return qs.w(qs.db.Where("ip_resource_total >= ?", iPResourceTotal))
}

// IPResourceTotalIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceTotalIn(iPResourceTotal ...int) ClusterQuerySet {
	if len(iPResourceTotal) == 0 {
		qs.db.AddError(errors.New("must at least pass one iPResourceTotal in IPResourceTotalIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("ip_resource_total IN (?)", iPResourceTotal))
}

// IPResourceTotalLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceTotalLt(iPResourceTotal int) ClusterQuerySet {
	return qs.w(qs.db.Where("ip_resource_total < ?", iPResourceTotal))
}

// IPResourceTotalLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceTotalLte(iPResourceTotal int) ClusterQuerySet {
	return qs.w(qs.db.Where("ip_resource_total <= ?", iPResourceTotal))
}

// IPResourceTotalNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceTotalNe(iPResourceTotal int) ClusterQuerySet {
	return qs.w(qs.db.Where("ip_resource_total != ?", iPResourceTotal))
}

// IPResourceTotalNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceTotalNotIn(iPResourceTotal ...int) ClusterQuerySet {
	if len(iPResourceTotal) == 0 {
		qs.db.AddError(errors.New("must at least pass one iPResourceTotal in IPResourceTotalNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("ip_resource_total NOT IN (?)", iPResourceTotal))
}

// IPResourceUsedEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceUsedEq(iPResourceUsed int) ClusterQuerySet {
	return qs.w(qs.db.Where("ip_resource_used = ?", iPResourceUsed))
}

// IPResourceUsedGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceUsedGt(iPResourceUsed int) ClusterQuerySet {
	return qs.w(qs.db.Where("ip_resource_used > ?", iPResourceUsed))
}

// IPResourceUsedGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceUsedGte(iPResourceUsed int) ClusterQuerySet {
	return qs.w(qs.db.Where("ip_resource_used >= ?", iPResourceUsed))
}

// IPResourceUsedIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceUsedIn(iPResourceUsed ...int) ClusterQuerySet {
	if len(iPResourceUsed) == 0 {
		qs.db.AddError(errors.New("must at least pass one iPResourceUsed in IPResourceUsedIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("ip_resource_used IN (?)", iPResourceUsed))
}

// IPResourceUsedLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceUsedLt(iPResourceUsed int) ClusterQuerySet {
	return qs.w(qs.db.Where("ip_resource_used < ?", iPResourceUsed))
}

// IPResourceUsedLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceUsedLte(iPResourceUsed int) ClusterQuerySet {
	return qs.w(qs.db.Where("ip_resource_used <= ?", iPResourceUsed))
}

// IPResourceUsedNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceUsedNe(iPResourceUsed int) ClusterQuerySet {
	return qs.w(qs.db.Where("ip_resource_used != ?", iPResourceUsed))
}

// IPResourceUsedNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) IPResourceUsedNotIn(iPResourceUsed ...int) ClusterQuerySet {
	if len(iPResourceUsed) == 0 {
		qs.db.AddError(errors.New("must at least pass one iPResourceUsed in IPResourceUsedNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("ip_resource_used NOT IN (?)", iPResourceUsed))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) Limit(limit int) ClusterQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// MasterCountEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) MasterCountEq(masterCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("master_count = ?", masterCount))
}

// MasterCountGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) MasterCountGt(masterCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("master_count > ?", masterCount))
}

// MasterCountGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) MasterCountGte(masterCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("master_count >= ?", masterCount))
}

// MasterCountIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) MasterCountIn(masterCount ...int) ClusterQuerySet {
	if len(masterCount) == 0 {
		qs.db.AddError(errors.New("must at least pass one masterCount in MasterCountIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("master_count IN (?)", masterCount))
}

// MasterCountLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) MasterCountLt(masterCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("master_count < ?", masterCount))
}

// MasterCountLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) MasterCountLte(masterCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("master_count <= ?", masterCount))
}

// MasterCountNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) MasterCountNe(masterCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("master_count != ?", masterCount))
}

// MasterCountNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) MasterCountNotIn(masterCount ...int) ClusterQuerySet {
	if len(masterCount) == 0 {
		qs.db.AddError(errors.New("must at least pass one masterCount in MasterCountNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("master_count NOT IN (?)", masterCount))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NameEq(name string) ClusterQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NameIn(name ...string) ClusterQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name IN (?)", name))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NameNe(name string) ClusterQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NameNotIn(name ...string) ClusterQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", name))
}

// NodeCountEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NodeCountEq(nodeCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("node_count = ?", nodeCount))
}

// NodeCountGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NodeCountGt(nodeCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("node_count > ?", nodeCount))
}

// NodeCountGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NodeCountGte(nodeCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("node_count >= ?", nodeCount))
}

// NodeCountIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NodeCountIn(nodeCount ...int) ClusterQuerySet {
	if len(nodeCount) == 0 {
		qs.db.AddError(errors.New("must at least pass one nodeCount in NodeCountIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("node_count IN (?)", nodeCount))
}

// NodeCountLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NodeCountLt(nodeCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("node_count < ?", nodeCount))
}

// NodeCountLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NodeCountLte(nodeCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("node_count <= ?", nodeCount))
}

// NodeCountNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NodeCountNe(nodeCount int) ClusterQuerySet {
	return qs.w(qs.db.Where("node_count != ?", nodeCount))
}

// NodeCountNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NodeCountNotIn(nodeCount ...int) ClusterQuerySet {
	if len(nodeCount) == 0 {
		qs.db.AddError(errors.New("must at least pass one nodeCount in NodeCountNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("node_count NOT IN (?)", nodeCount))
}

// NotNeedNATEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NotNeedNATEq(notNeedNAT bool) ClusterQuerySet {
	return qs.w(qs.db.Where("not_need_nat = ?", notNeedNAT))
}

// NotNeedNATIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NotNeedNATIn(notNeedNAT ...bool) ClusterQuerySet {
	if len(notNeedNAT) == 0 {
		qs.db.AddError(errors.New("must at least pass one notNeedNAT in NotNeedNATIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("not_need_nat IN (?)", notNeedNAT))
}

// NotNeedNATNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NotNeedNATNe(notNeedNAT bool) ClusterQuerySet {
	return qs.w(qs.db.Where("not_need_nat != ?", notNeedNAT))
}

// NotNeedNATNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) NotNeedNATNotIn(notNeedNAT ...bool) ClusterQuerySet {
	if len(notNeedNAT) == 0 {
		qs.db.AddError(errors.New("must at least pass one notNeedNAT in NotNeedNATNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("not_need_nat NOT IN (?)", notNeedNAT))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) Offset(offset int) ClusterQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs ClusterQuerySet) One(ret *Cluster) error {
	return qs.db.First(ret).Error
}

// OrderAscByAreaID is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByAreaID() ClusterQuerySet {
	return qs.w(qs.db.Order("area_id ASC"))
}

// OrderAscByCapacityUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByCapacityUpdatedAt() ClusterQuerySet {
	return qs.w(qs.db.Order("capacity_updated_at ASC"))
}

// OrderAscByClusterNum is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByClusterNum() ClusterQuerySet {
	return qs.w(qs.db.Order("cluster_num ASC"))
}

// OrderAscByConfigSvrCount is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByConfigSvrCount() ClusterQuerySet {
	return qs.w(qs.db.Order("config_svr_count ASC"))
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByCreatedAt() ClusterQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByDeletedAt() ClusterQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByID() ClusterQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByIPResourceTotal is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByIPResourceTotal() ClusterQuerySet {
	return qs.w(qs.db.Order("ip_resource_total ASC"))
}

// OrderAscByIPResourceUsed is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByIPResourceUsed() ClusterQuerySet {
	return qs.w(qs.db.Order("ip_resource_used ASC"))
}

// OrderAscByMasterCount is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByMasterCount() ClusterQuerySet {
	return qs.w(qs.db.Order("master_count ASC"))
}

// OrderAscByNodeCount is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByNodeCount() ClusterQuerySet {
	return qs.w(qs.db.Order("node_count ASC"))
}

// OrderAscByRemainCPU is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByRemainCPU() ClusterQuerySet {
	return qs.w(qs.db.Order("remain_cpu ASC"))
}

// OrderAscByRemainDisk is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByRemainDisk() ClusterQuerySet {
	return qs.w(qs.db.Order("remain_disk ASC"))
}

// OrderAscByRemainMem is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByRemainMem() ClusterQuerySet {
	return qs.w(qs.db.Order("remain_mem ASC"))
}

// OrderAscByTotalCPU is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByTotalCPU() ClusterQuerySet {
	return qs.w(qs.db.Order("total_cpu ASC"))
}

// OrderAscByTotalDisk is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByTotalDisk() ClusterQuerySet {
	return qs.w(qs.db.Order("total_disk ASC"))
}

// OrderAscByTotalMem is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByTotalMem() ClusterQuerySet {
	return qs.w(qs.db.Order("total_mem ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderAscByUpdatedAt() ClusterQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByAreaID is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByAreaID() ClusterQuerySet {
	return qs.w(qs.db.Order("area_id DESC"))
}

// OrderDescByCapacityUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByCapacityUpdatedAt() ClusterQuerySet {
	return qs.w(qs.db.Order("capacity_updated_at DESC"))
}

// OrderDescByClusterNum is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByClusterNum() ClusterQuerySet {
	return qs.w(qs.db.Order("cluster_num DESC"))
}

// OrderDescByConfigSvrCount is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByConfigSvrCount() ClusterQuerySet {
	return qs.w(qs.db.Order("config_svr_count DESC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByCreatedAt() ClusterQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByDeletedAt() ClusterQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByID() ClusterQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByIPResourceTotal is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByIPResourceTotal() ClusterQuerySet {
	return qs.w(qs.db.Order("ip_resource_total DESC"))
}

// OrderDescByIPResourceUsed is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByIPResourceUsed() ClusterQuerySet {
	return qs.w(qs.db.Order("ip_resource_used DESC"))
}

// OrderDescByMasterCount is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByMasterCount() ClusterQuerySet {
	return qs.w(qs.db.Order("master_count DESC"))
}

// OrderDescByNodeCount is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByNodeCount() ClusterQuerySet {
	return qs.w(qs.db.Order("node_count DESC"))
}

// OrderDescByRemainCPU is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByRemainCPU() ClusterQuerySet {
	return qs.w(qs.db.Order("remain_cpu DESC"))
}

// OrderDescByRemainDisk is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByRemainDisk() ClusterQuerySet {
	return qs.w(qs.db.Order("remain_disk DESC"))
}

// OrderDescByRemainMem is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByRemainMem() ClusterQuerySet {
	return qs.w(qs.db.Order("remain_mem DESC"))
}

// OrderDescByTotalCPU is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByTotalCPU() ClusterQuerySet {
	return qs.w(qs.db.Order("total_cpu DESC"))
}

// OrderDescByTotalDisk is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByTotalDisk() ClusterQuerySet {
	return qs.w(qs.db.Order("total_disk DESC"))
}

// OrderDescByTotalMem is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByTotalMem() ClusterQuerySet {
	return qs.w(qs.db.Order("total_mem DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) OrderDescByUpdatedAt() ClusterQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// ProjectIDEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ProjectIDEq(projectID string) ClusterQuerySet {
	return qs.w(qs.db.Where("project_id = ?", projectID))
}

// ProjectIDIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ProjectIDIn(projectID ...string) ClusterQuerySet {
	if len(projectID) == 0 {
		qs.db.AddError(errors.New("must at least pass one projectID in ProjectIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("project_id IN (?)", projectID))
}

// ProjectIDNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ProjectIDNe(projectID string) ClusterQuerySet {
	return qs.w(qs.db.Where("project_id != ?", projectID))
}

// ProjectIDNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) ProjectIDNotIn(projectID ...string) ClusterQuerySet {
	if len(projectID) == 0 {
		qs.db.AddError(errors.New("must at least pass one projectID in ProjectIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("project_id NOT IN (?)", projectID))
}

// RelatedProjectsEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RelatedProjectsEq(relatedProjects string) ClusterQuerySet {
	return qs.w(qs.db.Where("related_projects = ?", relatedProjects))
}

// RelatedProjectsIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RelatedProjectsIn(relatedProjects ...string) ClusterQuerySet {
	if len(relatedProjects) == 0 {
		qs.db.AddError(errors.New("must at least pass one relatedProjects in RelatedProjectsIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("related_projects IN (?)", relatedProjects))
}

// RelatedProjectsNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RelatedProjectsNe(relatedProjects string) ClusterQuerySet {
	return qs.w(qs.db.Where("related_projects != ?", relatedProjects))
}

// RelatedProjectsNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RelatedProjectsNotIn(relatedProjects ...string) ClusterQuerySet {
	if len(relatedProjects) == 0 {
		qs.db.AddError(errors.New("must at least pass one relatedProjects in RelatedProjectsNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("related_projects NOT IN (?)", relatedProjects))
}

// RemainCPUEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainCPUEq(remainCPU float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_cpu = ?", remainCPU))
}

// RemainCPUGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainCPUGt(remainCPU float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_cpu > ?", remainCPU))
}

// RemainCPUGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainCPUGte(remainCPU float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_cpu >= ?", remainCPU))
}

// RemainCPUIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainCPUIn(remainCPU ...float64) ClusterQuerySet {
	if len(remainCPU) == 0 {
		qs.db.AddError(errors.New("must at least pass one remainCPU in RemainCPUIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("remain_cpu IN (?)", remainCPU))
}

// RemainCPULt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainCPULt(remainCPU float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_cpu < ?", remainCPU))
}

// RemainCPULte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainCPULte(remainCPU float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_cpu <= ?", remainCPU))
}

// RemainCPUNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainCPUNe(remainCPU float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_cpu != ?", remainCPU))
}

// RemainCPUNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainCPUNotIn(remainCPU ...float64) ClusterQuerySet {
	if len(remainCPU) == 0 {
		qs.db.AddError(errors.New("must at least pass one remainCPU in RemainCPUNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("remain_cpu NOT IN (?)", remainCPU))
}

// RemainDiskEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainDiskEq(remainDisk float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_disk = ?", remainDisk))
}

// RemainDiskGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainDiskGt(remainDisk float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_disk > ?", remainDisk))
}

// RemainDiskGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainDiskGte(remainDisk float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_disk >= ?", remainDisk))
}

// RemainDiskIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainDiskIn(remainDisk ...float64) ClusterQuerySet {
	if len(remainDisk) == 0 {
		qs.db.AddError(errors.New("must at least pass one remainDisk in RemainDiskIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("remain_disk IN (?)", remainDisk))
}

// RemainDiskLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainDiskLt(remainDisk float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_disk < ?", remainDisk))
}

// RemainDiskLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainDiskLte(remainDisk float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_disk <= ?", remainDisk))
}

// RemainDiskNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainDiskNe(remainDisk float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_disk != ?", remainDisk))
}

// RemainDiskNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainDiskNotIn(remainDisk ...float64) ClusterQuerySet {
	if len(remainDisk) == 0 {
		qs.db.AddError(errors.New("must at least pass one remainDisk in RemainDiskNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("remain_disk NOT IN (?)", remainDisk))
}

// RemainMemEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainMemEq(remainMem float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_mem = ?", remainMem))
}

// RemainMemGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainMemGt(remainMem float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_mem > ?", remainMem))
}

// RemainMemGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainMemGte(remainMem float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_mem >= ?", remainMem))
}

// RemainMemIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainMemIn(remainMem ...float64) ClusterQuerySet {
	if len(remainMem) == 0 {
		qs.db.AddError(errors.New("must at least pass one remainMem in RemainMemIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("remain_mem IN (?)", remainMem))
}

// RemainMemLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainMemLt(remainMem float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_mem < ?", remainMem))
}

// RemainMemLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainMemLte(remainMem float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_mem <= ?", remainMem))
}

// RemainMemNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainMemNe(remainMem float64) ClusterQuerySet {
	return qs.w(qs.db.Where("remain_mem != ?", remainMem))
}

// RemainMemNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) RemainMemNotIn(remainMem ...float64) ClusterQuerySet {
	if len(remainMem) == 0 {
		qs.db.AddError(errors.New("must at least pass one remainMem in RemainMemNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("remain_mem NOT IN (?)", remainMem))
}

// StatusEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) StatusEq(status string) ClusterQuerySet {
	return qs.w(qs.db.Where("status = ?", status))
}

// StatusIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) StatusIn(status ...string) ClusterQuerySet {
	if len(status) == 0 {
		qs.db.AddError(errors.New("must at least pass one status in StatusIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("status IN (?)", status))
}

// StatusNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) StatusNe(status string) ClusterQuerySet {
	return qs.w(qs.db.Where("status != ?", status))
}

// StatusNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) StatusNotIn(status ...string) ClusterQuerySet {
	if len(status) == 0 {
		qs.db.AddError(errors.New("must at least pass one status in StatusNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("status NOT IN (?)", status))
}

// TotalCPUEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalCPUEq(totalCPU float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_cpu = ?", totalCPU))
}

// TotalCPUGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalCPUGt(totalCPU float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_cpu > ?", totalCPU))
}

// TotalCPUGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalCPUGte(totalCPU float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_cpu >= ?", totalCPU))
}

// TotalCPUIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalCPUIn(totalCPU ...float64) ClusterQuerySet {
	if len(totalCPU) == 0 {
		qs.db.AddError(errors.New("must at least pass one totalCPU in TotalCPUIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("total_cpu IN (?)", totalCPU))
}

// TotalCPULt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalCPULt(totalCPU float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_cpu < ?", totalCPU))
}

// TotalCPULte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalCPULte(totalCPU float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_cpu <= ?", totalCPU))
}

// TotalCPUNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalCPUNe(totalCPU float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_cpu != ?", totalCPU))
}

// TotalCPUNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalCPUNotIn(totalCPU ...float64) ClusterQuerySet {
	if len(totalCPU) == 0 {
		qs.db.AddError(errors.New("must at least pass one totalCPU in TotalCPUNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("total_cpu NOT IN (?)", totalCPU))
}

// TotalDiskEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalDiskEq(totalDisk float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_disk = ?", totalDisk))
}

// TotalDiskGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalDiskGt(totalDisk float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_disk > ?", totalDisk))
}

// TotalDiskGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalDiskGte(totalDisk float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_disk >= ?", totalDisk))
}

// TotalDiskIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalDiskIn(totalDisk ...float64) ClusterQuerySet {
	if len(totalDisk) == 0 {
		qs.db.AddError(errors.New("must at least pass one totalDisk in TotalDiskIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("total_disk IN (?)", totalDisk))
}

// TotalDiskLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalDiskLt(totalDisk float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_disk < ?", totalDisk))
}

// TotalDiskLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalDiskLte(totalDisk float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_disk <= ?", totalDisk))
}

// TotalDiskNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalDiskNe(totalDisk float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_disk != ?", totalDisk))
}

// TotalDiskNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalDiskNotIn(totalDisk ...float64) ClusterQuerySet {
	if len(totalDisk) == 0 {
		qs.db.AddError(errors.New("must at least pass one totalDisk in TotalDiskNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("total_disk NOT IN (?)", totalDisk))
}

// TotalMemEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalMemEq(totalMem float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_mem = ?", totalMem))
}

// TotalMemGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalMemGt(totalMem float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_mem > ?", totalMem))
}

// TotalMemGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalMemGte(totalMem float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_mem >= ?", totalMem))
}

// TotalMemIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalMemIn(totalMem ...float64) ClusterQuerySet {
	if len(totalMem) == 0 {
		qs.db.AddError(errors.New("must at least pass one totalMem in TotalMemIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("total_mem IN (?)", totalMem))
}

// TotalMemLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalMemLt(totalMem float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_mem < ?", totalMem))
}

// TotalMemLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalMemLte(totalMem float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_mem <= ?", totalMem))
}

// TotalMemNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalMemNe(totalMem float64) ClusterQuerySet {
	return qs.w(qs.db.Where("total_mem != ?", totalMem))
}

// TotalMemNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TotalMemNotIn(totalMem ...float64) ClusterQuerySet {
	if len(totalMem) == 0 {
		qs.db.AddError(errors.New("must at least pass one totalMem in TotalMemNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("total_mem NOT IN (?)", totalMem))
}

// TypeEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TypeEq(typeValue string) ClusterQuerySet {
	return qs.w(qs.db.Where("type = ?", typeValue))
}

// TypeIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TypeIn(typeValue ...string) ClusterQuerySet {
	if len(typeValue) == 0 {
		qs.db.AddError(errors.New("must at least pass one typeValue in TypeIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("type IN (?)", typeValue))
}

// TypeNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TypeNe(typeValue string) ClusterQuerySet {
	return qs.w(qs.db.Where("type != ?", typeValue))
}

// TypeNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) TypeNotIn(typeValue ...string) ClusterQuerySet {
	if len(typeValue) == 0 {
		qs.db.AddError(errors.New("must at least pass one typeValue in TypeNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("type NOT IN (?)", typeValue))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) UpdatedAtEq(updatedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) UpdatedAtGt(updatedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) UpdatedAtGte(updatedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) UpdatedAtLt(updatedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) UpdatedAtLte(updatedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs ClusterQuerySet) UpdatedAtNe(updatedAt time.Time) ClusterQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// SetAreaID is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetAreaID(areaID int) ClusterUpdater {
	u.fields[string(ClusterDBSchema.AreaID)] = areaID
	return u
}

// SetArtifactory is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetArtifactory(artifactory string) ClusterUpdater {
	u.fields[string(ClusterDBSchema.Artifactory)] = artifactory
	return u
}

// SetCapacityUpdatedAt is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetCapacityUpdatedAt(capacityUpdatedAt *time.Time) ClusterUpdater {
	u.fields[string(ClusterDBSchema.CapacityUpdatedAt)] = capacityUpdatedAt
	return u
}

// SetClusterID is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetClusterID(clusterID string) ClusterUpdater {
	u.fields[string(ClusterDBSchema.ClusterID)] = clusterID
	return u
}

// SetClusterNum is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetClusterNum(clusterNum int64) ClusterUpdater {
	u.fields[string(ClusterDBSchema.ClusterNum)] = clusterNum
	return u
}

// SetConfigSvrCount is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetConfigSvrCount(configSvrCount int) ClusterUpdater {
	u.fields[string(ClusterDBSchema.ConfigSvrCount)] = configSvrCount
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetCreatedAt(createdAt time.Time) ClusterUpdater {
	u.fields[string(ClusterDBSchema.CreatedAt)] = createdAt
	return u
}

// SetCreator is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetCreator(creator string) ClusterUpdater {
	u.fields[string(ClusterDBSchema.Creator)] = creator
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetDeletedAt(deletedAt *time.Time) ClusterUpdater {
	u.fields[string(ClusterDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetDescription is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetDescription(description string) ClusterUpdater {
	u.fields[string(ClusterDBSchema.Description)] = description
	return u
}

// SetDisabled is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetDisabled(disabled bool) ClusterUpdater {
	u.fields[string(ClusterDBSchema.Disabled)] = disabled
	return u
}

// SetEnvironment is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetEnvironment(environment string) ClusterUpdater {
	u.fields[string(ClusterDBSchema.Environment)] = environment
	return u
}

// SetExtra is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetExtra(extra string) ClusterUpdater {
	u.fields[string(ClusterDBSchema.Extra)] = extra
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetID(ID uint) ClusterUpdater {
	u.fields[string(ClusterDBSchema.ID)] = ID
	return u
}

// SetIPResourceTotal is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetIPResourceTotal(iPResourceTotal int) ClusterUpdater {
	u.fields[string(ClusterDBSchema.IPResourceTotal)] = iPResourceTotal
	return u
}

// SetIPResourceUsed is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetIPResourceUsed(iPResourceUsed int) ClusterUpdater {
	u.fields[string(ClusterDBSchema.IPResourceUsed)] = iPResourceUsed
	return u
}

// SetMasterCount is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetMasterCount(masterCount int) ClusterUpdater {
	u.fields[string(ClusterDBSchema.MasterCount)] = masterCount
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetName(name string) ClusterUpdater {
	u.fields[string(ClusterDBSchema.Name)] = name
	return u
}

// SetNodeCount is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetNodeCount(nodeCount int) ClusterUpdater {
	u.fields[string(ClusterDBSchema.NodeCount)] = nodeCount
	return u
}

// SetNotNeedNAT is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetNotNeedNAT(notNeedNAT bool) ClusterUpdater {
	u.fields[string(ClusterDBSchema.NotNeedNAT)] = notNeedNAT
	return u
}

// SetProjectID is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetProjectID(projectID string) ClusterUpdater {
	u.fields[string(ClusterDBSchema.ProjectID)] = projectID
	return u
}

// SetRelatedProjects is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetRelatedProjects(relatedProjects string) ClusterUpdater {
	u.fields[string(ClusterDBSchema.RelatedProjects)] = relatedProjects
	return u
}

// SetRemainCPU is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetRemainCPU(remainCPU float64) ClusterUpdater {
	u.fields[string(ClusterDBSchema.RemainCPU)] = remainCPU
	return u
}

// SetRemainDisk is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetRemainDisk(remainDisk float64) ClusterUpdater {
	u.fields[string(ClusterDBSchema.RemainDisk)] = remainDisk
	return u
}

// SetRemainMem is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetRemainMem(remainMem float64) ClusterUpdater {
	u.fields[string(ClusterDBSchema.RemainMem)] = remainMem
	return u
}

// SetStatus is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetStatus(status string) ClusterUpdater {
	u.fields[string(ClusterDBSchema.Status)] = status
	return u
}

// SetTotalCPU is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetTotalCPU(totalCPU float64) ClusterUpdater {
	u.fields[string(ClusterDBSchema.TotalCPU)] = totalCPU
	return u
}

// SetTotalDisk is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetTotalDisk(totalDisk float64) ClusterUpdater {
	u.fields[string(ClusterDBSchema.TotalDisk)] = totalDisk
	return u
}

// SetTotalMem is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetTotalMem(totalMem float64) ClusterUpdater {
	u.fields[string(ClusterDBSchema.TotalMem)] = totalMem
	return u
}

// SetType is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetType(typeValue string) ClusterUpdater {
	u.fields[string(ClusterDBSchema.Type)] = typeValue
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) SetUpdatedAt(updatedAt time.Time) ClusterUpdater {
	u.fields[string(ClusterDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u ClusterUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set ClusterQuerySet

// ===== BEGIN of Cluster modifiers

// ClusterDBSchemaField describes database schema field. It requires for method 'Update'
type ClusterDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f ClusterDBSchemaField) String() string {
	return string(f)
}

// ClusterDBSchema stores db field names of Cluster
var ClusterDBSchema = struct {
	ID                ClusterDBSchemaField
	CreatedAt         ClusterDBSchemaField
	UpdatedAt         ClusterDBSchemaField
	DeletedAt         ClusterDBSchemaField
	Extra             ClusterDBSchemaField
	Name              ClusterDBSchemaField
	Creator           ClusterDBSchemaField
	Description       ClusterDBSchemaField
	ProjectID         ClusterDBSchemaField
	RelatedProjects   ClusterDBSchemaField
	ClusterID         ClusterDBSchemaField
	ClusterNum        ClusterDBSchemaField
	Status            ClusterDBSchemaField
	Disabled          ClusterDBSchemaField
	Type              ClusterDBSchemaField
	Environment       ClusterDBSchemaField
	AreaID            ClusterDBSchemaField
	ConfigSvrCount    ClusterDBSchemaField
	MasterCount       ClusterDBSchemaField
	NodeCount         ClusterDBSchemaField
	IPResourceTotal   ClusterDBSchemaField
	IPResourceUsed    ClusterDBSchemaField
	Artifactory       ClusterDBSchemaField
	TotalMem          ClusterDBSchemaField
	RemainMem         ClusterDBSchemaField
	TotalCPU          ClusterDBSchemaField
	RemainCPU         ClusterDBSchemaField
	TotalDisk         ClusterDBSchemaField
	RemainDisk        ClusterDBSchemaField
	CapacityUpdatedAt ClusterDBSchemaField
	NotNeedNAT        ClusterDBSchemaField
}{

	ID:                ClusterDBSchemaField("id"),
	CreatedAt:         ClusterDBSchemaField("created_at"),
	UpdatedAt:         ClusterDBSchemaField("updated_at"),
	DeletedAt:         ClusterDBSchemaField("deleted_at"),
	Extra:             ClusterDBSchemaField("extra"),
	Name:              ClusterDBSchemaField("name"),
	Creator:           ClusterDBSchemaField("creator"),
	Description:       ClusterDBSchemaField("description"),
	ProjectID:         ClusterDBSchemaField("project_id"),
	RelatedProjects:   ClusterDBSchemaField("related_projects"),
	ClusterID:         ClusterDBSchemaField("cluster_id"),
	ClusterNum:        ClusterDBSchemaField("cluster_num"),
	Status:            ClusterDBSchemaField("status"),
	Disabled:          ClusterDBSchemaField("disabled"),
	Type:              ClusterDBSchemaField("type"),
	Environment:       ClusterDBSchemaField("environment"),
	AreaID:            ClusterDBSchemaField("area_id"),
	ConfigSvrCount:    ClusterDBSchemaField("config_svr_count"),
	MasterCount:       ClusterDBSchemaField("master_count"),
	NodeCount:         ClusterDBSchemaField("node_count"),
	IPResourceTotal:   ClusterDBSchemaField("ip_resource_total"),
	IPResourceUsed:    ClusterDBSchemaField("ip_resource_used"),
	Artifactory:       ClusterDBSchemaField("artifactory"),
	TotalMem:          ClusterDBSchemaField("total_mem"),
	RemainMem:         ClusterDBSchemaField("remain_mem"),
	TotalCPU:          ClusterDBSchemaField("total_cpu"),
	RemainCPU:         ClusterDBSchemaField("remain_cpu"),
	TotalDisk:         ClusterDBSchemaField("total_disk"),
	RemainDisk:        ClusterDBSchemaField("remain_disk"),
	CapacityUpdatedAt: ClusterDBSchemaField("capacity_updated_at"),
	NotNeedNAT:        ClusterDBSchemaField("not_need_nat"),
}

// Update updates Cluster fields by primary key
// nolint: dupl
func (o *Cluster) Update(db *gorm.DB, fields ...ClusterDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":                  o.ID,
		"created_at":          o.CreatedAt,
		"updated_at":          o.UpdatedAt,
		"deleted_at":          o.DeletedAt,
		"extra":               o.Extra,
		"name":                o.Name,
		"creator":             o.Creator,
		"description":         o.Description,
		"project_id":          o.ProjectID,
		"related_projects":    o.RelatedProjects,
		"cluster_id":          o.ClusterID,
		"cluster_num":         o.ClusterNum,
		"status":              o.Status,
		"disabled":            o.Disabled,
		"type":                o.Type,
		"environment":         o.Environment,
		"area_id":             o.AreaID,
		"config_svr_count":    o.ConfigSvrCount,
		"master_count":        o.MasterCount,
		"node_count":          o.NodeCount,
		"ip_resource_total":   o.IPResourceTotal,
		"ip_resource_used":    o.IPResourceUsed,
		"artifactory":         o.Artifactory,
		"total_mem":           o.TotalMem,
		"remain_mem":          o.RemainMem,
		"total_cpu":           o.TotalCPU,
		"remain_cpu":          o.RemainCPU,
		"total_disk":          o.TotalDisk,
		"remain_disk":         o.RemainDisk,
		"capacity_updated_at": o.CapacityUpdatedAt,
		"not_need_nat":        o.NotNeedNAT,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Cluster %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// ClusterUpdater is an Cluster updates manager
type ClusterUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewClusterUpdater creates new Cluster updater
// nolint: dupl
func NewClusterUpdater(db *gorm.DB) ClusterUpdater {
	return ClusterUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Cluster{}),
	}
}

// ===== END of Cluster modifiers

// ===== END of all query sets
