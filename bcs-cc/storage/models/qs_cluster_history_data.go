// Code generated by go-queryset. DO NOT EDIT.
package models

import (
	"errors"
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set ClusterHistoryDataQuerySet

// ClusterHistoryDataQuerySet is an queryset type for ClusterHistoryData
type ClusterHistoryDataQuerySet struct {
	db *gorm.DB
}

// NewClusterHistoryDataQuerySet constructs new ClusterHistoryDataQuerySet
func NewClusterHistoryDataQuerySet(db *gorm.DB) ClusterHistoryDataQuerySet {
	return ClusterHistoryDataQuerySet{
		db: db.Model(&ClusterHistoryData{}),
	}
}

func (qs ClusterHistoryDataQuerySet) w(db *gorm.DB) ClusterHistoryDataQuerySet {
	return NewClusterHistoryDataQuerySet(db)
}

// Create is an autogenerated method
// nolint: dupl
func (o *ClusterHistoryData) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *ClusterHistoryData) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) All(ret *[]ClusterHistoryData) error {
	return qs.db.Find(ret).Error
}

// CapacityUpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) CapacityUpdatedAtEq(capacityUpdatedAt time.Time) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at = ?", capacityUpdatedAt))
}

// CapacityUpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) CapacityUpdatedAtGt(capacityUpdatedAt time.Time) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at > ?", capacityUpdatedAt))
}

// CapacityUpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) CapacityUpdatedAtGte(capacityUpdatedAt time.Time) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at >= ?", capacityUpdatedAt))
}

// CapacityUpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) CapacityUpdatedAtLt(capacityUpdatedAt time.Time) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at < ?", capacityUpdatedAt))
}

// CapacityUpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) CapacityUpdatedAtLte(capacityUpdatedAt time.Time) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at <= ?", capacityUpdatedAt))
}

// CapacityUpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) CapacityUpdatedAtNe(capacityUpdatedAt time.Time) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("capacity_updated_at != ?", capacityUpdatedAt))
}

// ClusterIDEq is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) ClusterIDEq(clusterID string) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("cluster_id = ?", clusterID))
}

// ClusterIDIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) ClusterIDIn(clusterID ...string) ClusterHistoryDataQuerySet {
	if len(clusterID) == 0 {
		qs.db.AddError(errors.New("must at least pass one clusterID in ClusterIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("cluster_id IN (?)", clusterID))
}

// ClusterIDNe is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) ClusterIDNe(clusterID string) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("cluster_id != ?", clusterID))
}

// ClusterIDNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) ClusterIDNotIn(clusterID ...string) ClusterHistoryDataQuerySet {
	if len(clusterID) == 0 {
		qs.db.AddError(errors.New("must at least pass one clusterID in ClusterIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("cluster_id NOT IN (?)", clusterID))
}

// Count is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) CreatedAtEq(createdAt time.Time) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) CreatedAtGt(createdAt time.Time) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) CreatedAtGte(createdAt time.Time) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) CreatedAtLt(createdAt time.Time) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) CreatedAtLte(createdAt time.Time) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) CreatedAtNe(createdAt time.Time) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) Delete() error {
	return qs.db.Delete(ClusterHistoryData{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(ClusterHistoryData{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(ClusterHistoryData{})
	return db.RowsAffected, db.Error
}

// EnvironmentEq is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) EnvironmentEq(environment string) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("environment = ?", environment))
}

// EnvironmentIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) EnvironmentIn(environment ...string) ClusterHistoryDataQuerySet {
	if len(environment) == 0 {
		qs.db.AddError(errors.New("must at least pass one environment in EnvironmentIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("environment IN (?)", environment))
}

// EnvironmentNe is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) EnvironmentNe(environment string) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("environment != ?", environment))
}

// EnvironmentNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) EnvironmentNotIn(environment ...string) ClusterHistoryDataQuerySet {
	if len(environment) == 0 {
		qs.db.AddError(errors.New("must at least pass one environment in EnvironmentNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("environment NOT IN (?)", environment))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) GetUpdater() ClusterHistoryDataUpdater {
	return NewClusterHistoryDataUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) IDEq(ID uint) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) IDGt(ID uint) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) IDGte(ID uint) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) IDIn(ID ...uint) ClusterHistoryDataQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) IDLt(ID uint) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) IDLte(ID uint) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) IDNe(ID uint) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) IDNotIn(ID ...uint) ClusterHistoryDataQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) Limit(limit int) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) Offset(offset int) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs ClusterHistoryDataQuerySet) One(ret *ClusterHistoryData) error {
	return qs.db.First(ret).Error
}

// OrderAscByCapacityUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderAscByCapacityUpdatedAt() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("capacity_updated_at ASC"))
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderAscByCreatedAt() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderAscByID() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByRemainCPU is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderAscByRemainCPU() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("remain_cpu ASC"))
}

// OrderAscByRemainDisk is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderAscByRemainDisk() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("remain_disk ASC"))
}

// OrderAscByRemainMem is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderAscByRemainMem() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("remain_mem ASC"))
}

// OrderAscByTotalCPU is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderAscByTotalCPU() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("total_cpu ASC"))
}

// OrderAscByTotalDisk is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderAscByTotalDisk() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("total_disk ASC"))
}

// OrderAscByTotalMem is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderAscByTotalMem() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("total_mem ASC"))
}

// OrderDescByCapacityUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderDescByCapacityUpdatedAt() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("capacity_updated_at DESC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderDescByCreatedAt() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderDescByID() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByRemainCPU is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderDescByRemainCPU() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("remain_cpu DESC"))
}

// OrderDescByRemainDisk is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderDescByRemainDisk() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("remain_disk DESC"))
}

// OrderDescByRemainMem is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderDescByRemainMem() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("remain_mem DESC"))
}

// OrderDescByTotalCPU is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderDescByTotalCPU() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("total_cpu DESC"))
}

// OrderDescByTotalDisk is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderDescByTotalDisk() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("total_disk DESC"))
}

// OrderDescByTotalMem is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) OrderDescByTotalMem() ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Order("total_mem DESC"))
}

// ProjectIDEq is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) ProjectIDEq(projectID string) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("project_id = ?", projectID))
}

// ProjectIDIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) ProjectIDIn(projectID ...string) ClusterHistoryDataQuerySet {
	if len(projectID) == 0 {
		qs.db.AddError(errors.New("must at least pass one projectID in ProjectIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("project_id IN (?)", projectID))
}

// ProjectIDNe is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) ProjectIDNe(projectID string) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("project_id != ?", projectID))
}

// ProjectIDNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) ProjectIDNotIn(projectID ...string) ClusterHistoryDataQuerySet {
	if len(projectID) == 0 {
		qs.db.AddError(errors.New("must at least pass one projectID in ProjectIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("project_id NOT IN (?)", projectID))
}

// RemainCPUEq is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainCPUEq(remainCPU float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_cpu = ?", remainCPU))
}

// RemainCPUGt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainCPUGt(remainCPU float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_cpu > ?", remainCPU))
}

// RemainCPUGte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainCPUGte(remainCPU float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_cpu >= ?", remainCPU))
}

// RemainCPUIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainCPUIn(remainCPU ...float64) ClusterHistoryDataQuerySet {
	if len(remainCPU) == 0 {
		qs.db.AddError(errors.New("must at least pass one remainCPU in RemainCPUIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("remain_cpu IN (?)", remainCPU))
}

// RemainCPULt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainCPULt(remainCPU float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_cpu < ?", remainCPU))
}

// RemainCPULte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainCPULte(remainCPU float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_cpu <= ?", remainCPU))
}

// RemainCPUNe is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainCPUNe(remainCPU float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_cpu != ?", remainCPU))
}

// RemainCPUNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainCPUNotIn(remainCPU ...float64) ClusterHistoryDataQuerySet {
	if len(remainCPU) == 0 {
		qs.db.AddError(errors.New("must at least pass one remainCPU in RemainCPUNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("remain_cpu NOT IN (?)", remainCPU))
}

// RemainDiskEq is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainDiskEq(remainDisk float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_disk = ?", remainDisk))
}

// RemainDiskGt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainDiskGt(remainDisk float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_disk > ?", remainDisk))
}

// RemainDiskGte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainDiskGte(remainDisk float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_disk >= ?", remainDisk))
}

// RemainDiskIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainDiskIn(remainDisk ...float64) ClusterHistoryDataQuerySet {
	if len(remainDisk) == 0 {
		qs.db.AddError(errors.New("must at least pass one remainDisk in RemainDiskIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("remain_disk IN (?)", remainDisk))
}

// RemainDiskLt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainDiskLt(remainDisk float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_disk < ?", remainDisk))
}

// RemainDiskLte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainDiskLte(remainDisk float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_disk <= ?", remainDisk))
}

// RemainDiskNe is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainDiskNe(remainDisk float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_disk != ?", remainDisk))
}

// RemainDiskNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainDiskNotIn(remainDisk ...float64) ClusterHistoryDataQuerySet {
	if len(remainDisk) == 0 {
		qs.db.AddError(errors.New("must at least pass one remainDisk in RemainDiskNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("remain_disk NOT IN (?)", remainDisk))
}

// RemainMemEq is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainMemEq(remainMem float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_mem = ?", remainMem))
}

// RemainMemGt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainMemGt(remainMem float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_mem > ?", remainMem))
}

// RemainMemGte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainMemGte(remainMem float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_mem >= ?", remainMem))
}

// RemainMemIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainMemIn(remainMem ...float64) ClusterHistoryDataQuerySet {
	if len(remainMem) == 0 {
		qs.db.AddError(errors.New("must at least pass one remainMem in RemainMemIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("remain_mem IN (?)", remainMem))
}

// RemainMemLt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainMemLt(remainMem float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_mem < ?", remainMem))
}

// RemainMemLte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainMemLte(remainMem float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_mem <= ?", remainMem))
}

// RemainMemNe is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainMemNe(remainMem float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("remain_mem != ?", remainMem))
}

// RemainMemNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) RemainMemNotIn(remainMem ...float64) ClusterHistoryDataQuerySet {
	if len(remainMem) == 0 {
		qs.db.AddError(errors.New("must at least pass one remainMem in RemainMemNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("remain_mem NOT IN (?)", remainMem))
}

// TotalCPUEq is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalCPUEq(totalCPU float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_cpu = ?", totalCPU))
}

// TotalCPUGt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalCPUGt(totalCPU float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_cpu > ?", totalCPU))
}

// TotalCPUGte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalCPUGte(totalCPU float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_cpu >= ?", totalCPU))
}

// TotalCPUIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalCPUIn(totalCPU ...float64) ClusterHistoryDataQuerySet {
	if len(totalCPU) == 0 {
		qs.db.AddError(errors.New("must at least pass one totalCPU in TotalCPUIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("total_cpu IN (?)", totalCPU))
}

// TotalCPULt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalCPULt(totalCPU float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_cpu < ?", totalCPU))
}

// TotalCPULte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalCPULte(totalCPU float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_cpu <= ?", totalCPU))
}

// TotalCPUNe is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalCPUNe(totalCPU float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_cpu != ?", totalCPU))
}

// TotalCPUNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalCPUNotIn(totalCPU ...float64) ClusterHistoryDataQuerySet {
	if len(totalCPU) == 0 {
		qs.db.AddError(errors.New("must at least pass one totalCPU in TotalCPUNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("total_cpu NOT IN (?)", totalCPU))
}

// TotalDiskEq is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalDiskEq(totalDisk float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_disk = ?", totalDisk))
}

// TotalDiskGt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalDiskGt(totalDisk float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_disk > ?", totalDisk))
}

// TotalDiskGte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalDiskGte(totalDisk float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_disk >= ?", totalDisk))
}

// TotalDiskIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalDiskIn(totalDisk ...float64) ClusterHistoryDataQuerySet {
	if len(totalDisk) == 0 {
		qs.db.AddError(errors.New("must at least pass one totalDisk in TotalDiskIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("total_disk IN (?)", totalDisk))
}

// TotalDiskLt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalDiskLt(totalDisk float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_disk < ?", totalDisk))
}

// TotalDiskLte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalDiskLte(totalDisk float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_disk <= ?", totalDisk))
}

// TotalDiskNe is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalDiskNe(totalDisk float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_disk != ?", totalDisk))
}

// TotalDiskNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalDiskNotIn(totalDisk ...float64) ClusterHistoryDataQuerySet {
	if len(totalDisk) == 0 {
		qs.db.AddError(errors.New("must at least pass one totalDisk in TotalDiskNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("total_disk NOT IN (?)", totalDisk))
}

// TotalMemEq is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalMemEq(totalMem float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_mem = ?", totalMem))
}

// TotalMemGt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalMemGt(totalMem float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_mem > ?", totalMem))
}

// TotalMemGte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalMemGte(totalMem float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_mem >= ?", totalMem))
}

// TotalMemIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalMemIn(totalMem ...float64) ClusterHistoryDataQuerySet {
	if len(totalMem) == 0 {
		qs.db.AddError(errors.New("must at least pass one totalMem in TotalMemIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("total_mem IN (?)", totalMem))
}

// TotalMemLt is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalMemLt(totalMem float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_mem < ?", totalMem))
}

// TotalMemLte is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalMemLte(totalMem float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_mem <= ?", totalMem))
}

// TotalMemNe is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalMemNe(totalMem float64) ClusterHistoryDataQuerySet {
	return qs.w(qs.db.Where("total_mem != ?", totalMem))
}

// TotalMemNotIn is an autogenerated method
// nolint: dupl
func (qs ClusterHistoryDataQuerySet) TotalMemNotIn(totalMem ...float64) ClusterHistoryDataQuerySet {
	if len(totalMem) == 0 {
		qs.db.AddError(errors.New("must at least pass one totalMem in TotalMemNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("total_mem NOT IN (?)", totalMem))
}

// SetCapacityUpdatedAt is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) SetCapacityUpdatedAt(capacityUpdatedAt time.Time) ClusterHistoryDataUpdater {
	u.fields[string(ClusterHistoryDataDBSchema.CapacityUpdatedAt)] = capacityUpdatedAt
	return u
}

// SetClusterID is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) SetClusterID(clusterID string) ClusterHistoryDataUpdater {
	u.fields[string(ClusterHistoryDataDBSchema.ClusterID)] = clusterID
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) SetCreatedAt(createdAt time.Time) ClusterHistoryDataUpdater {
	u.fields[string(ClusterHistoryDataDBSchema.CreatedAt)] = createdAt
	return u
}

// SetEnvironment is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) SetEnvironment(environment string) ClusterHistoryDataUpdater {
	u.fields[string(ClusterHistoryDataDBSchema.Environment)] = environment
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) SetID(ID uint) ClusterHistoryDataUpdater {
	u.fields[string(ClusterHistoryDataDBSchema.ID)] = ID
	return u
}

// SetProjectID is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) SetProjectID(projectID string) ClusterHistoryDataUpdater {
	u.fields[string(ClusterHistoryDataDBSchema.ProjectID)] = projectID
	return u
}

// SetRemainCPU is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) SetRemainCPU(remainCPU float64) ClusterHistoryDataUpdater {
	u.fields[string(ClusterHistoryDataDBSchema.RemainCPU)] = remainCPU
	return u
}

// SetRemainDisk is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) SetRemainDisk(remainDisk float64) ClusterHistoryDataUpdater {
	u.fields[string(ClusterHistoryDataDBSchema.RemainDisk)] = remainDisk
	return u
}

// SetRemainMem is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) SetRemainMem(remainMem float64) ClusterHistoryDataUpdater {
	u.fields[string(ClusterHistoryDataDBSchema.RemainMem)] = remainMem
	return u
}

// SetTotalCPU is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) SetTotalCPU(totalCPU float64) ClusterHistoryDataUpdater {
	u.fields[string(ClusterHistoryDataDBSchema.TotalCPU)] = totalCPU
	return u
}

// SetTotalDisk is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) SetTotalDisk(totalDisk float64) ClusterHistoryDataUpdater {
	u.fields[string(ClusterHistoryDataDBSchema.TotalDisk)] = totalDisk
	return u
}

// SetTotalMem is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) SetTotalMem(totalMem float64) ClusterHistoryDataUpdater {
	u.fields[string(ClusterHistoryDataDBSchema.TotalMem)] = totalMem
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u ClusterHistoryDataUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set ClusterHistoryDataQuerySet

// ===== BEGIN of ClusterHistoryData modifiers

// ClusterHistoryDataDBSchemaField describes database schema field. It requires for method 'Update'
type ClusterHistoryDataDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f ClusterHistoryDataDBSchemaField) String() string {
	return string(f)
}

// ClusterHistoryDataDBSchema stores db field names of ClusterHistoryData
var ClusterHistoryDataDBSchema = struct {
	ID                ClusterHistoryDataDBSchemaField
	CreatedAt         ClusterHistoryDataDBSchemaField
	ProjectID         ClusterHistoryDataDBSchemaField
	ClusterID         ClusterHistoryDataDBSchemaField
	Environment       ClusterHistoryDataDBSchemaField
	TotalMem          ClusterHistoryDataDBSchemaField
	RemainMem         ClusterHistoryDataDBSchemaField
	TotalCPU          ClusterHistoryDataDBSchemaField
	RemainCPU         ClusterHistoryDataDBSchemaField
	TotalDisk         ClusterHistoryDataDBSchemaField
	RemainDisk        ClusterHistoryDataDBSchemaField
	CapacityUpdatedAt ClusterHistoryDataDBSchemaField
}{

	ID:                ClusterHistoryDataDBSchemaField("id"),
	CreatedAt:         ClusterHistoryDataDBSchemaField("created_at"),
	ProjectID:         ClusterHistoryDataDBSchemaField("project_id"),
	ClusterID:         ClusterHistoryDataDBSchemaField("cluster_id"),
	Environment:       ClusterHistoryDataDBSchemaField("environment"),
	TotalMem:          ClusterHistoryDataDBSchemaField("total_mem"),
	RemainMem:         ClusterHistoryDataDBSchemaField("remain_mem"),
	TotalCPU:          ClusterHistoryDataDBSchemaField("total_cpu"),
	RemainCPU:         ClusterHistoryDataDBSchemaField("remain_cpu"),
	TotalDisk:         ClusterHistoryDataDBSchemaField("total_disk"),
	RemainDisk:        ClusterHistoryDataDBSchemaField("remain_disk"),
	CapacityUpdatedAt: ClusterHistoryDataDBSchemaField("capacity_updated_at"),
}

// Update updates ClusterHistoryData fields by primary key
// nolint: dupl
func (o *ClusterHistoryData) Update(db *gorm.DB, fields ...ClusterHistoryDataDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":                  o.ID,
		"created_at":          o.CreatedAt,
		"project_id":          o.ProjectID,
		"cluster_id":          o.ClusterID,
		"environment":         o.Environment,
		"total_mem":           o.TotalMem,
		"remain_mem":          o.RemainMem,
		"total_cpu":           o.TotalCPU,
		"remain_cpu":          o.RemainCPU,
		"total_disk":          o.TotalDisk,
		"remain_disk":         o.RemainDisk,
		"capacity_updated_at": o.CapacityUpdatedAt,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update ClusterHistoryData %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// ClusterHistoryDataUpdater is an ClusterHistoryData updates manager
type ClusterHistoryDataUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewClusterHistoryDataUpdater creates new ClusterHistoryData updater
// nolint: dupl
func NewClusterHistoryDataUpdater(db *gorm.DB) ClusterHistoryDataUpdater {
	return ClusterHistoryDataUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&ClusterHistoryData{}),
	}
}

// ===== END of ClusterHistoryData modifiers

// ===== END of all query sets
